{
  "stats": {
    "suites": 12,
    "tests": 35,
    "passes": 35,
    "pending": 0,
    "failures": 0,
    "start": "2021-03-10T04:19:26.560Z",
    "end": "2021-03-10T04:20:05.446Z",
    "duration": 38886,
    "testsRegistered": 41,
    "passPercent": 85.36585365853658,
    "pendingPercent": 0,
    "other": 3,
    "hasOther": true,
    "skipped": 6,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "294920a3-456b-43c3-b6ac-861f147a0345",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "89f40fb5-98f3-405d-8691-f9b37a5ae4a6",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 197,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "620dd30b-c6fd-440b-8a76-f7fab86f16af",
              "parentUUID": "89f40fb5-98f3-405d-8691-f9b37a5ae4a6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "620dd30b-c6fd-440b-8a76-f7fab86f16af"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 197,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5bdcd98e-a4b3-4196-8ee9-e24bd6cc4f8c",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 65,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');",
              "err": {},
              "uuid": "cfc2ef50-2a63-4d33-ab48-4a2c2a419e35",
              "parentUUID": "5bdcd98e-a4b3-4196-8ee9-e24bd6cc4f8c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 79,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color')\n    .should('have.length', 4)\n    .then(function (colors) {\n    for (var i = 0; i < colors.length; i++) {\n        cy.wrap(colors[i])\n            .should('be.visible');\n    }\n});",
              "err": {},
              "uuid": "87573d9d-efe0-4f37-a12b-a7a7ed0d61c5",
              "parentUUID": "5bdcd98e-a4b3-4196-8ee9-e24bd6cc4f8c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 119,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color')\n    .each(function (color) {\n    cy.wrap(color)\n        .should('have.class', 'color')\n        .and('not.have.css', 'background-color', WHITE);\n    cy.wrap(color)\n        .should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "50d7d893-8792-4be6-ad68-62abfde796d7",
              "parentUUID": "5bdcd98e-a4b3-4196-8ee9-e24bd6cc4f8c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 78,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color')\n    .each(function (color) {\n    cy.wrap(color)\n        .and('have.css', 'border', \"1px solid \" + BLACK)\n        .and('have.class', 'color');\n});",
              "err": {},
              "uuid": "ef7134ac-4ae0-478b-ad3c-f824fa3889c4",
              "parentUUID": "5bdcd98e-a4b3-4196-8ee9-e24bd6cc4f8c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 112,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color')\n    .then(function (colors) {\n    for (var index = 1; index < colors.length; index += 1) {\n        var currentColor = colors[index];\n        var previousColor = colors[index - 1];\n        cy.wrap(currentColor)\n            .should('be.onTheRightOf', previousColor)\n            .and('be.horizontallyAlignedWith', previousColor);\n    }\n});",
              "err": {},
              "uuid": "357bd924-a760-4ef0-b759-53dc387eaf5b",
              "parentUUID": "5bdcd98e-a4b3-4196-8ee9-e24bd6cc4f8c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 86,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n    cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "cd1e2064-8203-49e8-9b5f-c3f1d04b75ef",
              "parentUUID": "5bdcd98e-a4b3-4196-8ee9-e24bd6cc4f8c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 90,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n    var allColors = Array.from(colors).map(function (color) { return (Cypress.$(color).css('background-color')); });\n    cy.log(allColors);\n    var uniqColors = __spreadArray([], __read(new Set(allColors)));\n    cy.log(uniqColors);\n    expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "1e32eadd-f3f0-44a6-8d90-437eee46b282",
              "parentUUID": "5bdcd98e-a4b3-4196-8ee9-e24bd6cc4f8c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cfc2ef50-2a63-4d33-ab48-4a2c2a419e35",
            "87573d9d-efe0-4f37-a12b-a7a7ed0d61c5",
            "50d7d893-8792-4be6-ad68-62abfde796d7",
            "ef7134ac-4ae0-478b-ad3c-f824fa3889c4",
            "357bd924-a760-4ef0-b759-53dc387eaf5b",
            "cd1e2064-8203-49e8-9b5f-c3f1d04b75ef",
            "1e32eadd-f3f0-44a6-8d90-437eee46b282"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 629,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a8915f8f-57a4-470e-8d0d-214766576ef1",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 85,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color')\n    .first()\n    .should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "d7b8aa3f-e8b9-4c01-8eeb-1b74a43667b9",
              "parentUUID": "a8915f8f-57a4-470e-8d0d-214766576ef1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 137,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color')\n    .eq(1)\n    .should('not.have.css', 'background-color', BLACK);\ncy.get('.color')\n    .eq(1)\n    .should('not.have.css', 'background-color', WHITE);\ncy.get('.color')\n    .eq(1)\n    .should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color')\n    .eq(1)\n    .should('have.css', 'background-color');\ncy.get('.color')\n    .eq(2)\n    .should('not.have.css', 'background-color', BLACK);\ncy.get('.color')\n    .eq(2)\n    .should('not.have.css', 'background-color', WHITE);\ncy.get('.color')\n    .eq(2)\n    .should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color')\n    .eq(2)\n    .should('have.css', 'background-color');\ncy.get('.color')\n    .eq(3)\n    .should('not.have.css', 'background-color', BLACK);\ncy.get('.color')\n    .eq(3)\n    .should('not.have.css', 'background-color', WHITE);\ncy.get('.color')\n    .eq(3)\n    .should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color')\n    .eq(3)\n    .should('have.css', 'background-color');",
              "err": {},
              "uuid": "c6f617bf-500d-4136-a695-54b621c31223",
              "parentUUID": "a8915f8f-57a4-470e-8d0d-214766576ef1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d7b8aa3f-e8b9-4c01-8eeb-1b74a43667b9",
            "c6f617bf-500d-4136-a695-54b621c31223"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 222,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "037c0b43-0dfa-4893-8978-1c386cfea27d",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 63,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "70f09895-bac7-4cc1-b20a-7b06dcb822f7",
              "parentUUID": "037c0b43-0dfa-4893-8978-1c386cfea27d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 91,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "2c552785-3975-47d8-a968-0d6786a9c2fc",
              "parentUUID": "037c0b43-0dfa-4893-8978-1c386cfea27d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 127,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel')\n    .should('have.length', 25)\n    .each(function (pixel) {\n    expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "28aa8859-b359-41b0-a70b-7f62b17d752d",
              "parentUUID": "037c0b43-0dfa-4893-8978-1c386cfea27d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 60,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n    cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "839ce92e-e838-4749-8289-2a4a0124f345",
              "parentUUID": "037c0b43-0dfa-4893-8978-1c386cfea27d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "70f09895-bac7-4cc1-b20a-7b06dcb822f7",
            "2c552785-3975-47d8-a968-0d6786a9c2fc",
            "28aa8859-b359-41b0-a70b-7f62b17d752d",
            "839ce92e-e838-4749-8289-2a4a0124f345"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 341,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b91efb50-ce2d-49e4-925c-8816ac03cf22",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 199,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel')\n    .should('have.length', 25)\n    .each(function (pixel) {\n    expect(pixel).to.have.css('background-color', WHITE);\n})\n    .and(function (pixels) {\n    var rows = chunk(pixels, 5);\n    rows.forEach(function (row) {\n        for (var index = 1; index < row.length; index += 1) {\n            var current = pixels[index];\n            var previous = pixels[index - 1];\n            cy.wrap(current)\n                .should('be.onTheRightOf', previous)\n                .and('be.horizontallyAlignedWith', previous);\n        }\n    });\n    for (var index = 1; index < 5; index += 1) {\n        expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n    }\n});",
              "err": {},
              "uuid": "cad119f9-42ba-4221-97f6-804458215f66",
              "parentUUID": "b91efb50-ce2d-49e4-925c-8816ac03cf22",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 201,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel')\n    .each(function (pixel) {\n    cy.wrap(pixel)\n        .should('have.css', 'height', '40px')\n        .and('have.css', 'width', '40px')\n        .and('have.css', 'border', \"1px solid \" + BLACK);\n});",
              "err": {},
              "uuid": "4fa35dae-40a0-48a4-b096-fceeb1f0a530",
              "parentUUID": "b91efb50-ce2d-49e4-925c-8816ac03cf22",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cad119f9-42ba-4221-97f6-804458215f66",
            "4fa35dae-40a0-48a4-b096-fceeb1f0a530"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 400,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e5843fa0-95ef-477a-99b3-3e3f56cd23bc",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 62,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "b406ee6f-5dae-4a90-8eae-f0b7acf5aac9",
              "parentUUID": "e5843fa0-95ef-477a-99b3-3e3f56cd23bc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 67,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)')\n    .each(function (color) {\n    cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "93940973-d19c-426b-b85a-30067f121bee",
              "parentUUID": "e5843fa0-95ef-477a-99b3-3e3f56cd23bc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b406ee6f-5dae-4a90-8eae-f0b7acf5aac9",
            "93940973-d19c-426b-b85a-30067f121bee"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 129,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "9721f4eb-1621-43ff-ae44-59ee39b1e3b7",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 410,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n    cy.wrap(selectedColor).click();\n    cy.get('.color').each(function (color, colorIndex) {\n        if (colorIndex === selectedColorIndex) {\n            expect(color).to.have.class('selected');\n        }\n        else {\n            expect(color).not.to.have.class('selected');\n        }\n    });\n});",
              "err": {},
              "uuid": "a61ff935-48eb-48d1-a3e5-53a3d77997aa",
              "parentUUID": "9721f4eb-1621-43ff-ae44-59ee39b1e3b7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 8174,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n    var backgroundColor = color.css('background-color');\n    cy.wrap(color).click();\n    cy.get('.pixel').each(function (pixel) {\n        cy.wrap(pixel)\n            .click()\n            .should('not.have.class', 'selected');\n    });\n});",
              "err": {},
              "uuid": "09da7777-e55d-4f31-9895-a8e08e302794",
              "parentUUID": "9721f4eb-1621-43ff-ae44-59ee39b1e3b7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a61ff935-48eb-48d1-a3e5-53a3d77997aa",
            "09da7777-e55d-4f31-9895-a8e08e302794"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8584,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e6af9481-00c6-4c8f-a19b-79b216f70746",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2019,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel)\n        .click()\n        .should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "76653916-0088-413b-a315-ba3a9a17bb3c",
              "parentUUID": "e6af9481-00c6-4c8f-a19b-79b216f70746",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 8148,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n    var backgroundColor = color.css('background-color');\n    cy.wrap(color).click();\n    cy.get('.pixel').each(function (pixel) {\n        cy.wrap(pixel)\n            .click()\n            .should('have.css', 'background-color', backgroundColor);\n    });\n});",
              "err": {},
              "uuid": "613c5e65-bda6-411b-b64f-876988ed63cc",
              "parentUUID": "e6af9481-00c6-4c8f-a19b-79b216f70746",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 1261,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = { 0: 6, 1: 8, 2: 16, 3: 18 };\ncy.get('.color').each(function (color, index) {\n    cy.wrap(color).click();\n    var backgroundColor = color.css('background-color');\n    var clickedPixelIndex = colorToPixelIndexMap[index];\n    cy.get('.pixel').eq(clickedPixelIndex).click();\n    cy.get('.pixel')\n        .eq(clickedPixelIndex - 1)\n        .should('not.have.css', 'background-color', backgroundColor);\n    cy.get('.pixel')\n        .eq(clickedPixelIndex + 1)\n        .should('not.have.css', 'background-color', backgroundColor);\n    cy.get('.pixel')\n        .eq(clickedPixelIndex - 5)\n        .should('not.have.css', 'background-color', backgroundColor);\n    cy.get('.pixel')\n        .eq(clickedPixelIndex + 5)\n        .should('not.have.css', 'background-color', backgroundColor);\n    cy.get('.pixel')\n        .eq(clickedPixelIndex - 6)\n        .should('not.have.css', 'background-color', backgroundColor);\n    cy.get('.pixel')\n        .eq(clickedPixelIndex - 4)\n        .should('not.have.css', 'background-color', backgroundColor);\n    cy.get('.pixel')\n        .eq(clickedPixelIndex + 4)\n        .should('not.have.css', 'background-color', backgroundColor);\n    cy.get('.pixel')\n        .eq(clickedPixelIndex + 6)\n        .should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "6d80ba53-631b-48bb-bc52-a534a3209793",
              "parentUUID": "e6af9481-00c6-4c8f-a19b-79b216f70746",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "76653916-0088-413b-a315-ba3a9a17bb3c",
            "613c5e65-bda6-411b-b64f-876988ed63cc",
            "6d80ba53-631b-48bb-bc52-a534a3209793"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11428,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2625684f-570e-4057-b092-26fca7386f4e",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 90,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "8870fbbe-21a5-4246-a4ea-92e0704d6b59",
              "parentUUID": "2625684f-570e-4057-b092-26fca7386f4e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 70,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n    cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n    cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "cb50440e-8ab7-4da7-bd37-93e2e0367e04",
              "parentUUID": "2625684f-570e-4057-b092-26fca7386f4e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 59,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "7534f26a-d76d-4e10-8076-0b4815406813",
              "parentUUID": "2625684f-570e-4057-b092-26fca7386f4e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2244,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n    var backgroundColor = color.css('background-color');\n    cy.wrap(color).click();\n    cy.get('.pixel').each(function (pixel) {\n        cy.wrap(pixel)\n            .click()\n            .should('have.css', 'background-color', backgroundColor);\n    });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "9de47a78-2618-404f-9144-32612e78de64",
              "parentUUID": "2625684f-570e-4057-b092-26fca7386f4e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8870fbbe-21a5-4246-a4ea-92e0704d6b59",
            "cb50440e-8ab7-4da7-bd37-93e2e0367e04",
            "7534f26a-d76d-4e10-8076-0b4815406813",
            "9de47a78-2618-404f-9144-32612e78de64"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2463,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5f4b879d-4570-432e-b4ba-7f223fb8be85",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 103,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {},
              "uuid": "fb985368-7fec-494d-aff0-bcd77d4c0b7f",
              "parentUUID": "5f4b879d-4570-432e-b4ba-7f223fb8be85",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 73,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {},
              "uuid": "b565704c-bd14-466a-8ef9-8c247b541961",
              "parentUUID": "5f4b879d-4570-432e-b4ba-7f223fb8be85",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 79,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {},
              "uuid": "9945119a-f7dc-4225-bf20-893fe5af58ff",
              "parentUUID": "5f4b879d-4570-432e-b4ba-7f223fb8be85",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 74,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {},
              "uuid": "22662d73-ff6f-479b-b4b7-52376d364847",
              "parentUUID": "5f4b879d-4570-432e-b4ba-7f223fb8be85",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 125,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n    cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n    cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "d8b80ad6-841b-4942-b2ad-02e92938a260",
              "parentUUID": "5f4b879d-4570-432e-b4ba-7f223fb8be85",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 125,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n    cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {},
              "uuid": "285f5e9d-14b0-4d87-9995-6eb62fad9535",
              "parentUUID": "5f4b879d-4570-432e-b4ba-7f223fb8be85",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 217,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) { return alerted = msg; });\ncy.get('#generate-board')\n    .click()\n    .then(function () { return expect(alerted).to.match(/Board inválido!/i); });",
              "err": {},
              "uuid": "3ad96e53-fa18-433b-b09e-0ebf54911098",
              "parentUUID": "5f4b879d-4570-432e-b4ba-7f223fb8be85",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 485,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {},
              "uuid": "2dc0f08d-9221-4fde-bba1-ef240d2e59c7",
              "parentUUID": "5f4b879d-4570-432e-b4ba-7f223fb8be85",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4205,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel')\n    .should('have.length', 36)\n    .each(function (pixel) {\n    expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "AssertionError: Timed out retrying: Too many elements found. Found '100', expected '25'.\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `10 - Faça o quadro de pixel...`",
                "estack": "AssertionError: Timed out retrying: Too many elements found. Found '100', expected '25'.\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `10 - Faça o quadro de pixel...`\n    at Context.eval (http://localhost:35051/__cypress/tests?p=cypress/integration/project.spec.js:347:26)",
                "diff": "- 100\n+ 25\n"
              },
              "uuid": "5aecd13a-5b6e-4adb-9187-98d56212ba83",
              "parentUUID": "5f4b879d-4570-432e-b4ba-7f223fb8be85",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fb985368-7fec-494d-aff0-bcd77d4c0b7f",
            "b565704c-bd14-466a-8ef9-8c247b541961",
            "9945119a-f7dc-4225-bf20-893fe5af58ff",
            "22662d73-ff6f-479b-b4b7-52376d364847",
            "d8b80ad6-841b-4942-b2ad-02e92938a260",
            "285f5e9d-14b0-4d87-9995-6eb62fad9535",
            "3ad96e53-fa18-433b-b09e-0ebf54911098",
            "2dc0f08d-9221-4fde-bba1-ef240d2e59c7"
          ],
          "failures": [
            "5aecd13a-5b6e-4adb-9187-98d56212ba83"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5486,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3ca386c7-faa6-417e-8eb4-5a06bdf063d7",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4263,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "AssertionError: Timed out retrying: Too many elements found. Found '100', expected '25'.\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `11 - Limite o tamanho mínim...`",
                "estack": "AssertionError: Timed out retrying: Too many elements found. Found '100', expected '25'.\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `11 - Limite o tamanho mínim...`\n    at Context.eval (http://localhost:35051/__cypress/tests?p=cypress/integration/project.spec.js:399:26)",
                "diff": "- 100\n+ 25\n"
              },
              "uuid": "799cea60-e6a0-490e-9d72-d49aec4639e4",
              "parentUUID": "3ca386c7-faa6-417e-8eb4-5a06bdf063d7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "c653e6c0-b65d-46c0-9dd9-4902a51eaf00",
              "parentUUID": "3ca386c7-faa6-417e-8eb4-5a06bdf063d7",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {},
              "uuid": "9063050d-b338-4695-992d-0f1a9303602a",
              "parentUUID": "3ca386c7-faa6-417e-8eb4-5a06bdf063d7",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "799cea60-e6a0-490e-9d72-d49aec4639e4"
          ],
          "pending": [],
          "skipped": [
            "c653e6c0-b65d-46c0-9dd9-4902a51eaf00",
            "9063050d-b338-4695-992d-0f1a9303602a"
          ],
          "duration": 4263,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "840f36bd-d83b-4546-a068-ccc59fdc0ead",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 4186,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n    var currentColors;\n    var previousColors;\n    previousColors = Array.from(colors).map(function (color) { return (Cypress.$(color).css('background-color')); });\n    for (var i = 0; i < 5; i += 1) {\n        cy.reload();\n        cy.get('.color').then(function (colors) {\n            currentColors = Array.from(colors).map(function (color) { return (Cypress.$(color).css('background-color')); });\n            expect(currentColors).not.to.deep.equal(previousColors);\n            previousColors = currentColors;\n        });\n    }\n});",
              "err": {
                "message": "AssertionError: Timed out retrying: Too many elements found. Found '100', expected '25'.\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `12 - Faça com que as cores ...`",
                "estack": "AssertionError: Timed out retrying: Too many elements found. Found '100', expected '25'.\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `12 - Faça com que as cores ...`\n    at Context.eval (http://localhost:35051/__cypress/tests?p=cypress/integration/project.spec.js:420:26)",
                "diff": "- 100\n+ 25\n"
              },
              "uuid": "ea4d587a-7272-441b-8705-79bbfce3fe8d",
              "parentUUID": "840f36bd-d83b-4546-a068-ccc59fdc0ead",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n    var currentColors;\n    var previousColors;\n    previousColors = Array.from(colors).map(function (color) { return (Cypress.$(color).css('background-color')); });\n    expect(previousColors[0]).to.eq(BLACK);\n    for (var i = 0; i < 5; i += 1) {\n        cy.reload();\n        cy.get('.color').then(function (colors) {\n            currentColors = Array.from(colors).map(function (color) { return (Cypress.$(color).css('background-color')); });\n            expect(currentColors[0]).to.eq(BLACK);\n            expect(currentColors).not.to.deep.equal(previousColors);\n            previousColors = currentColors;\n        });\n    }\n});",
              "err": {},
              "uuid": "839f445d-f696-4570-82a3-3d90bdb4b80a",
              "parentUUID": "840f36bd-d83b-4546-a068-ccc59fdc0ead",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "ea4d587a-7272-441b-8705-79bbfce3fe8d"
          ],
          "pending": [],
          "skipped": [
            "839f445d-f696-4570-82a3-3d90bdb4b80a"
          ],
          "duration": 4186,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}